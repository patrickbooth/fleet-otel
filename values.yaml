namespaceOverride: "open-telemetry"

mode: daemonset

presets:
  # enables the k8sattributesprocessor and adds it to the traces, metrics, and logs pipelines
  kubernetesAttributes:
    enabled: true
  # enables the kubeletstatsreceiver and adds it to the metrics pipelines
  kubeletMetrics:
    enabled: true
  # Enables the filelogreceiver and adds it to the logs pipelines
  logsCollection:
    enabled: true
## The chart only includes the loggingexporter by default
## If you want to send your data somewhere you need to
## configure an exporter, such as the otlpexporter
config:
  exporters:
    prometheus_remote_write:
    # endpoint: "https:<ID>:<TOKEN>@<GRAFANA_PROM_URL>"  
      endpoint: "https://1464027:glc_eyJvIjoiMTA3MTQ5MyIsIm4iOiJzZW5kLW90ZWwtc2VuZC1vdGVsIiwiayI6IjdXZjA2UXRYM3F1V2ZYbUM2MWwyOTA4UyIsIm0iOnsiciI6InVzIn19@prometheus-prod-24-prod-eu-west-2.grafana.net/api/prom/push"
  ## In local example the agent will send data to grafana directly using the above configuration.
  ## A more production like configuration would be to configure a gateway.  
  ## The agents would use the otlp endpoint, and that in turn will send data to grafana
  #  otlp: 
  #    endpoint: "<SOME BACKEND>" 
  service:
    pipelines:
  #    traces:
  #      exporters: [ otlp ]
      metrics:
        exporters: [ prometheus_remote_write ]
      logs:
        exporters: [ prometheus_remote_write ]
